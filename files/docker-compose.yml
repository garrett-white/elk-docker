version: '2.2'
services:
  es01:
    image: elastic/elasticsearch:${ELASTIC_VERSION}
    container_name: es01
    hostname: es01
    environment:
      - node.name=es01
      - cluster.name=atd-elk
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.monitoring.collection.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.license.self_generated.type=basic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - LOGSTASH_PASSWORD=${LOGSTASH_PASSWORD}
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=${ES_JVM}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - ./elasticsearch/scripts:/usr/share/elasticsearch/scripts
    entrypoint: /usr/share/elasticsearch/scripts/es-entrypoint.sh
    ports:
      - 9200:9200
    networks:
      - elk

  kibana:
    image: elastic/kibana:${ELASTIC_VERSION}
    container_name: kibana
    hostname: kibana
    environment:
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - XPACK_MONITORING_ENABLED=true
      - XPACK_SECURITY_ENABLED=true
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
      - XPACK_REPORTING_ENCRYPTIONKEY${ENCRYPTION_KEY}
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    restart: always
    healthcheck:
      test: curl -f http://localhost:5601 || exit 1   
    ports:
      - 5601:5601
    networks:
      - elk

  logstash:
    image: elastic/logstash:${LOGSTASH_VERSION}
    container_name: logstash
    hostname: logstash
    environment:
      - LS_JAVA_OPTS=${LS_JVM}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}  
    volumes:
      - ./logstash/config:/usr/share/logstash/config
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      # - ./logstash/mordor-logs:/usr/share/logstash/mordor-logs
      # - ./logstash/scripts:/usr/share/logstash/scripts
    ports:
      - "5000-5100:5000-5100"
      - 9600:9600
    restart: always
    healthcheck:  
      test: curl -f http://localhost:9600 || exit 1  
    # entrypoint: /usr/share/logstash/scripts/ls-entrypoint.sh
    networks:
      - elk

  metricbeat:
    image: elastic/metricbeat:${ELASTIC_VERSION}
    container_name: metricbeat
    hostname: metricbeat
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./metricbeat/config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml 
    restart: always
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - elk

  fleet:
    image: elastic/elastic-agent:${ELASTIC_VERSION}
    container_name: fleet
    hostname: fleet
    environment: 
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://es01:9200  
      - FLEET_SERVER_INSECURE_HTTP=true
      - FLEET_SERVER_POLICY_ID=fleet-server-policy
      - FLEET_INSECURE=true 
      - KIBANA_FLEET_SETUP=1
      - KIBANA_FLEET_HOST=http://kibana:5601
      - KIBANA_FLEET_USERNAME=elastic
      - KIBANA_FLEET_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - 8220:8220
    restart: always
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - elk

  #elastalert:
    #image: elastalert:latest
    #container_name: elastalert
    #restart: always
    #environment:
      #ES_HOST: es01
      #ES_PORT: 9200
    #networks:
      #- elk
  
  #domain_stats:
    #image: hasecuritysolutions/domain_stats
    #container_name: domain_stats
    #restart: always
    #networks:
      #- elk

volumes:
  esdata01:
    driver: local

networks:
  elk:
    name: elk
